# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CalculateCredit.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from datetime import datetime
from dateutil.relativedelta import relativedelta
from PyQt5 import QtCore, QtGui, QtWidgets



class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi()
    def back_to_main(self):
        self.hide()
        self.window1.show()
    def back_to_main_manu(self, window1):
        self.window1 = window1
    def setupUi(self):
        self.setObjectName("MainWindow")
        self.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(30, 180, 751, 341))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButtonClear = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonClear.setGeometry(QtCore.QRect(620, 530, 75, 23))
        self.pushButtonClear.setObjectName("pushButtonClear")
        self.pushButtonClear.clicked.connect(self.clear)
        self.pushButtonClose = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonClose.setGeometry(QtCore.QRect(700, 530, 75, 23))
        self.pushButtonClose.setObjectName("pushButtonClose")
        self.pushButtonClose.clicked.connect(self.back_to_main)
        self.pushButtonCalculate = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonCalculate.setGeometry(QtCore.QRect(690, 140, 75, 23))
        self.pushButtonCalculate.setObjectName("pushButtonCalculate")
        self.pushButtonCalculate.clicked.connect(self.calculatorForCredit)
        self.hSliderTime = QtWidgets.QSlider(self.centralwidget)
        self.hSliderTime.setGeometry(QtCore.QRect(190, 80, 160, 22))
        self.hSliderTime.setOrientation(QtCore.Qt.Horizontal)
        self.hSliderTime.setObjectName("hSliderTime")
        self.hSliderTime.setMinimum(6)
        self.hSliderTime.setMaximum(120)
        self.hSliderTime.setSingleStep(1)
        self.hSliderTime.setValue(12)
        self.hSliderTime.valueChanged.connect(lambda: self.sliderMonths.setText(f'{self.hSliderTime.value()}'))
        self.sliderMonths = QtWidgets.QLabel(self.centralwidget)
        self.sliderMonths.setGeometry(QtCore.QRect(270, 60, 61, 20))
        self.sliderMonths.setObjectName("sliderMonths")
        
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 30, 81, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 80, 131, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(40, 130, 101, 16))
        self.label_4.setObjectName("label_4")
        self.HSliderInterest = QtWidgets.QSlider(self.centralwidget)
        self.HSliderInterest.setGeometry(QtCore.QRect(190, 130, 160, 22))
        self.HSliderInterest.setOrientation(QtCore.Qt.Horizontal)
        self.HSliderInterest.setObjectName("HSliderInterest")
        self.HSliderInterest.setMinimum(1)
        self.HSliderInterest.setMaximum(20)
        self.HSliderInterest.setSingleStep(1)
        self.HSliderInterest.setValue(2)
        self.HSliderInterest.valueChanged.connect(lambda: self.sliderCreditInterest.setText(f'{self.HSliderInterest.value()/2}'))
        
        self.sliderCreditInterest = QtWidgets.QLabel(self.centralwidget)
        self.sliderCreditInterest.setGeometry(QtCore.QRect(270, 110, 47, 13))
        self.sliderCreditInterest.setObjectName("sliderCreditInterest")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(190, 30, 161, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(530, 140, 141, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(480, 140, 47, 13))
        self.label.setObjectName("label")
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.actionClear = QtWidgets.QAction(self)
        self.actionClear.setObjectName("actionClear")
        self.actionClose = QtWidgets.QAction(self)
        self.actionClose.setObjectName("actionClose")
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClear)
        self.menuFile.addAction(self.actionClose)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    


    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButtonClear.setText(_translate("MainWindow", "Clear"))
        self.pushButtonClose.setText(_translate("MainWindow", "Close"))
        self.pushButtonCalculate.setText(_translate("MainWindow", "Calculate"))
        self.sliderMonths.setText(_translate("MainWindow", "1"))
        self.label_2.setText(_translate("MainWindow", "Credit amount"))
        self.label_3.setText(_translate("MainWindow", "Time of payment (months)"))
        self.label_4.setText(_translate("MainWindow", "Credit interest"))
        self.sliderCreditInterest.setText(_translate("MainWindow", "1.0"))
        self.label.setText(_translate("MainWindow", "Total"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionClear.setText(_translate("MainWindow", "Clear"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
    
    def calculatorForCredit(self):
        try:
            Z = float(self.lineEdit.text())
            t = int(self.hSliderTime.value())
            p = float(self.HSliderInterest.value()/200)
            kt = Z*(1+p*t)
            self.lineEdit_2.setText(str(kt))
            current_date = datetime.now()
            
            print(current_date)
            rows = []
            
            paypermonth = round(kt/t,2)
            for m in range(t+1):
                current_date += relativedelta(months=1)
                formatted_date = current_date.strftime("%d-%m-%Y")
                cell = [m+1,paypermonth,formatted_date, round(kt-m*paypermonth if m!= t else 0 ,2)]
                rows.append(cell)
            
            self.tableWidget.setColumnCount(len(rows[0]))
            self.tableWidget.setRowCount(len(rows))
            self.tableWidget.setHorizontalHeaderLabels(["Month", "loan installment", "Due date", "Loan left"])
            self.tableWidget.setColumnWidth(0,50)
            self.tableWidget.setColumnWidth(1,120)
            self.tableWidget.setColumnWidth(2,120)
            self.tableWidget.setColumnWidth(3,120)
            
            for ind_row, row in enumerate(rows):
                for ind_col, col in enumerate(row):
                    item = QtWidgets.QTableWidgetItem(str(col))
                    self.tableWidget.setItem(ind_row,ind_col,item)
                    
                
            self.tableWidget.repaint()
            self.tableWidget.update()
        except Exception as e:
            self.showErrorPopup(str(e))
        
    def showErrorPopup(self, message):
        error_dialog = QtWidgets.QMessageBox()
        error_dialog.setIcon(QtWidgets.QMessageBox.Critical)
        error_dialog.setWindowTitle("Error")
        error_dialog.setText("An error occurred!")
        error_dialog.setInformativeText(message)
        error_dialog.setStandardButtons(QtWidgets.QMessageBox.Ok)
        self.clear()
        error_dialog.exec_()

    def clear(self):
        self.HSliderInterest.setValue(2)
        self.hSliderTime.setValue(1)
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.lineEdit_2.clear()
        self.lineEdit.clear()
        self.sliderCreditInterest.setText("1.0")
        self.sliderMonths.setText("1")
            


